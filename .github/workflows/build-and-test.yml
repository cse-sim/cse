name: Build and Test

on: push

jobs:
  build-cse:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows
            os_ver: "2022"
            config: Release
            arch: "32"
            experimental: false
          - os: windows
            os_ver: "2022"
            config: Release
            arch: "64"
            experimental: true
          - os: macos
            os_ver: "11"
            config: Release
            arch: "64"
            experimental: true
          - os: ubuntu
            os_ver: "22.04"
            config: Release
            arch: "64"
            experimental: true
    defaults:
      run:
        shell: bash
    name: ${{ matrix.os }}-${{ matrix.os_ver }}-${{ matrix.arch }}bit ${{ matrix.config }}
    runs-on: ${{ matrix.os }}-${{ matrix.os_ver }}
    continue-on-error: ${{ matrix.experimental }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Build CSE
        uses: ./.github/actions/build-cse
        with:
          arch: ${{ matrix.arch }}
          config: ${{ matrix.config }}
      - name: Build cse_tests.exe (unit tests)
        run: cmake -DBUILD_ARCHITECTURE=${{ matrix.arch }} -DCONFIGURATION=${{ matrix.config }} -DTARGET_NAME=cse_tests -DBUILD_DIRECTORY=build -P cmake/build.cmake
      - name: Upload executable artifact
        uses: actions/upload-artifact@v3
        with:
          name: CSE_${{ matrix.os }}-${{ matrix.os_ver }}-${{ matrix.arch }}bit_${{ matrix.config }}
          path: build/CSE*
      - name: Build wcmp executable
        run: cmake -DBUILD_ARCHITECTURE=${{ matrix.arch }} -DCONFIGURATION=${{ matrix.config }} -DTARGET_NAME=wcmp -DBUILD_DIRECTORY=build -P cmake/build.cmake
      # - name: Setup Mesa3D
      #   uses: bigladder/github-actions/setup-mesa3d@main
      #   with:
      #     install-directory: msvc
      - name: Test
        run: ctest -C ${{ matrix.config }} -j 2 --output-on-failure -E shadetest  # CI can't do GPU calcs at this time (the steps above get us close, but throws an exception on destruction)
        working-directory: build
  build-doc:
    strategy:
      fail-fast: false
    name: Build CSE documentation
    needs: build-cse
    if: ${{ always() }}
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
      - name: Configure CMake
        run: cmake -P cmake/configure.cmake
      - name: Download CSE artifact
        uses: ./.github/actions/download-cse-artifact
      - name: Build docs
        uses: ./.github/actions/build-docs
      - name: Run coverage check
        run: rake coverage
        working-directory: doc
      - name: Upload documentation
        uses: actions/upload-artifact@v3
        with:
          name: Documentation
          path: |
                doc/output
                !doc/output/.git
