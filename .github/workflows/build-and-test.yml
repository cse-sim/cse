name: Build and Test

on: push

jobs:
  build-cse:
    name: Build CSE executable
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Build
        shell: cmd
        run: build.bat no-pause
      - name: Upload Executable
        uses: actions/upload-artifact@v2
        with:
          name: CSE.exe
          path: msvc/CSE.exe
      - name: Upload release on tag
        if: startsWith(github.ref, 'refs/tags/')
        uses: AButler/upload-release-assets@v2.0
        with:
          files: msvc/CSE.exe
          repo-token: ${{ secrets.GITHUB_TOKEN }}
  test-cse:
    name: Test CSE
    needs: build-cse
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Configure CMake
        run: cmake -P cmake/configure.cmake
      - name: Build wcmp
        run: cmake --build . --config Release --target wcmp
        working-directory: msvc/build
      - name: Download Executable
        uses: actions/download-artifact@v2
        with:
          name: CSE.exe
          path: msvc
      - name: Test
        run: ctest -C Release --output-on-failure -E shadetest  # CI can't do GPU calcs at this time
        working-directory: msvc/build
  build-doc:
    name: Build CSE documentation
    needs: build-cse
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Configure CMake
        run: cmake -P cmake/configure.cmake
      - name: Download Executable
        uses: actions/download-artifact@v2
        with:
          name: CSE.exe
          path: msvc
      - name: Install pandoc
        run: 'cinst -y pandoc --version=1.17.2 --ia=ALLUSERS=1'
      - name: Add pandoc to path
        run: echo "::add-path::C:\Program Files (x86)\Pandoc"
      - name: Setup LaTeX
        uses: r-lib/actions/setup-tinytex@v1
      - name: Add LaTeX packages
        run: tlmgr install mathspec fancyhdr
      - name: Add MSVC developer commands to PATH
        uses: ilammy/msvc-dev-cmd@v1
      - name: Build docs
        run: rake
        working-directory: doc
      - name: Upload documentation
        uses: actions/upload-artifact@v2
        with:
          name: Documentation
          path: doc/output
      - name: Prepare tag
        id: prepare_tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_NAME="${GITHUB_REF##refs/tags/}"
          echo "::set-output name=tag_name::${TAG_NAME}"
      - name: Update gh-pages on tag
        if: startsWith(github.ref, 'refs/tags/')
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: doc/output
          user_name: 'cse-ci'
          user_email: 'ci@cse.org'
          full_commit_message: "Update docs for ${{ steps.prepare_tag.outputs.tag_name }}."