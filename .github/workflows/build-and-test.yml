name: Build and Test

on: push

jobs:
  build-cse:
    name: Build CSE executable
    runs-on: windows-2022
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install recent SDK
        uses: GuillaumeFalourd/setup-windows10-sdk-action@v1
        with:
          sdk-version: 19041
      - name: Get branch name
        uses: tj-actions/branch-names@v5
        id: branch-name
      - name: Save branch name
        run: echo "CI_GIT_BRANCH=${{steps.branch-name.outputs.current_branch}}" >> $GITHUB_ENV
      - name: Build
        shell: cmd
        run: build.bat
      - name: Upload executable artifiact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: CSE.exe
          path: msvc/CSE.exe
  test-cse:
    name: Test CSE
    needs: build-cse
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: recursive
      - name: Configure CMake
        run: cmake -P cmake/configure.cmake
      - name: Build wcmp
        run: cmake --build . --config Release --target wcmp
        working-directory: msvc/build
      - name: Download executable artifact
        uses: actions/download-artifact@v2
        with:
          name: CSE.exe
          path: msvc
      # - name: Download Mesa3D on Windows
      #   if: runner.os == 'Windows'
      #   shell: cmd
      #   run: curl.exe -L --output mesa.7z --url https://github.com/pal1000/mesa-dist-win/releases/download/20.3.2/mesa3d-20.3.2-release-msvc.7z
      #   working-directory: msvc
      # - name: Install Mesa3D on Windows
      #   if: runner.os == 'Windows'
      #   shell: cmd
      #   run: |
      #     "C:\Program Files\7-Zip\7z.exe" x mesa.7z
      #     mklink opengl32.dll "x64\opengl32.dll"
      #     mklink libglapi.dll "x64\libglapi.dll"
      #   working-directory: msvc
      - name: Test
        run: ctest -C Release --output-on-failure -E shadetest  # CI can't do GPU calcs at this time (the steps above get us close, but throws an exception on destruction)
        working-directory: msvc/build
  build-doc:
    name: Build CSE documentation
    needs: build-cse
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: recursive
      - name: Configure CMake
        run: cmake -P cmake/configure.cmake
      - name: Download executable artifact
        uses: actions/download-artifact@v2
        with:
          name: CSE.exe
          path: msvc
      - name: Install pandoc
        run: 'cinst -y pandoc --version=1.17.2 --ia=ALLUSERS=1'
      - name: Add pandoc to path
        run: echo "C:\Program Files (x86)\Pandoc" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Add MSVC developer commands to PATH
        uses: ilammy/msvc-dev-cmd@v1
      - name: Build docs
        run: rake
        working-directory: doc
      - name: Upload documentation
        uses: actions/upload-artifact@v2.2.4
        with:
          name: Documentation
          path: doc/output